{"version":3,"sources":["components/SpeedControls.js","components/formInputs/SlideToggle/SlideToggle.js","components/DisplayCount.js","App.js","reportWebVitals.js","index.js"],"names":["SpeedControls","speed","speedAdjustment","setSpeed","className","onClick","disabled","SlideToggle","autoScroll","setAutoScroll","updateCount","type","checked","onChange","DisplayCount","counter","App","useState","parseInt","localStorage","getItem","setCounter","Pictures","map","x","URL","pictureList","setPictureList","history","setHistory","src","setSrc","timer","setTimer","clearTimer","clearTimeout","setItem","getNextPicture","idx","Math","floor","random","length","newSrc","copy","splice","useEffect","setTimeout","pop","width","alt","onMouseDown","onMouseUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.103e3023.chunk.js","sourcesContent":["import React from 'react'\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\nexport default function SpeedControls({ speed, speedAdjustment, setSpeed }) {\n\n    const increaseSpeed = () => speed > .5 ? speed - speedAdjustment : speed\n    const reduceSpeed = () => speed + speedAdjustment\n\n    return (\n        <div className=\"static__speed__controls\">\n            <div>\n\n                <p className=\"speed\">{speed}</p>\n                <p className=\"speed\">sec</p>\n            </div>\n\n            {speed > .5\n                ? <button className=\"btn__speed\" onClick={() => setSpeed(increaseSpeed())}><ExpandMoreIcon /></button>\n                : <button className=\"btn__speed\" disabled><ExpandMoreIcon /></button>\n            }\n            {speed < 5\n                ? <button className=\"btn__speed\" onClick={() => setSpeed(reduceSpeed())}><ExpandLessIcon /></button>\n                : <button className=\"btn__speed\" disabled><ExpandLessIcon /></button>\n            }\n        </div>\n    )\n}\n","import { Update } from '@material-ui/icons'\nimport React, { useState } from 'react'\nimport './style.css'\n\nexport default function SlideToggle({ autoScroll, setAutoScroll, updateCount }) {\n\n    const handleCheck = () => {\n        setAutoScroll(!autoScroll)\n        updateCount()\n    }\n\n    return (\n        <label className=\"switch\">\n            <input type=\"checkbox\" checked={autoScroll} onChange={handleCheck} />\n            <span className=\"slider round\"></span>\n        </label>\n    )\n}\n","import React from 'react'\n\nexport default function DisplayCount({ counter }) {\n    return (\n        <div className=\"count__container\">\n            <h3 className=\"count__number\">{counter}</h3>\n            <h6 className=\"count__text\">images</h6>\n            <h6 className=\"count__text\"> viewed</h6>\n        </div>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport './App.css';\nimport Pictures from './utils/images.json'\nimport ArrowBackIosOutlinedIcon from '@material-ui/icons/ArrowBackIosOutlined';\nimport SpeedControls from './components/SpeedControls'\nimport SlideToggle from './components/formInputs/SlideToggle/SlideToggle'\nimport DisplayCount from './components/DisplayCount'\n\nfunction App() {\n\n  const timerSpeed = 3\n  const speedAdjustment = .5\n\n  const [counter, setCounter] = useState(parseInt(localStorage.getItem('cuteCount')) || 1)\n  const [pictureList, setPictureList] = useState(Pictures.map((x) => x.URL))\n  const [autoScroll, setAutoScroll] = useState(false)\n  const [speed, setSpeed] = useState(timerSpeed)\n  const [history, setHistory] = useState([])\n  const [src, setSrc] = useState()\n  const [timer, setTimer] = useState()\n\n\n  const getRandomIdx = () => Math.floor(Math.random() * pictureList.length)\n  const clearTimer = () => { setTimer(clearTimeout(timer)) }\n  const updateCount = () => {\n    setCounter(counter + 1)\n    localStorage.setItem('cuteCount', counter + 1)\n  }\n\n  const getNextPicture = () => {\n    const idx = getRandomIdx()\n    const newSrc = pictureList[idx]\n    const copy = pictureList\n    copy.splice(idx, 1)\n    setSrc(newSrc)\n    setPictureList(pictureList.length === 0 ? Pictures.map((x) => x.URL) : copy)\n    setHistory([...history, newSrc])\n  }\n\n  const handleBack = () => {\n    setPictureList([...pictureList, src])\n    setSrc(history[history.length - 2])\n    const copy = history\n    copy.pop()\n    setHistory(copy)\n  }\n\n  useEffect(() => {\n    clearTimer()\n    getNextPicture()\n\n    if (!autoScroll) return\n\n    setTimer(\n      setTimeout(() => {\n        if (autoScroll) updateCount()\n      }, speed * 1000)\n    )\n  }, [counter, autoScroll])\n\n  return (\n    <div className=\"App\">\n      <h1>babe's pups</h1>\n      <div className=\"flex\">\n        <div className=\"static__controls\">\n\n          {history.length > 1\n            ? <button className=\"btn__back\" onClick={handleBack}><ArrowBackIosOutlinedIcon /></button>\n            : <button className=\"btn__back\" disabled><ArrowBackIosOutlinedIcon /></button>\n          }\n\n          {/* {!autoScroll\n          ? <button className=\"btn__auto__cycle\" onClick={() => setAutoScroll(true)}><AutorenewOutlinedIcon /></button>\n          : <button className=\"btn__auto__cycle btn__active\" onClick={() => setAutoScroll(false)}><HighlightOffOutlinedIcon /> </button>\n        } */}\n\n          <SlideToggle\n            className=\"btn__auto__cycle\"\n            autoScroll={autoScroll}\n            setAutoScroll={setAutoScroll}\n            updateCount={updateCount}\n          />\n        </div>\n        <DisplayCount counter={counter} />\n\n        {autoScroll\n          ? <>\n            <SpeedControls\n              speedAdjustment={speedAdjustment}\n              setAutoScroll={setAutoScroll}\n              setSpeed={setSpeed}\n              speed={speed}\n            />\n          </>\n          : null}\n\n        {!autoScroll && counter === 1 ? <h5> (tap pic or slider to start)</h5> : null}\n\n      </div>\n\n      <img\n        src={src}\n        width=\"90%\"\n        alt=\"random doggy\"\n        // onClick={handleImgClick}\n        onMouseDown={clearTimer}\n        onMouseUp={updateCount}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}